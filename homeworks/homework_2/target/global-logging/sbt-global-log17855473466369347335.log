[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Lansk\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Lansk\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.0 (Oracle Corporation Java 19.0.2)
[debug]       Load.loadUnit: plugins took 143.3725ms
[debug]       Load.loadUnit: defsScala took 0.4439ms
[debug] [Loading] Scanning directory C:\Users\Lansk\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Lansk\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 26.587799 ms
[debug]           Load.resolveProject(global-plugins) took 65.6552ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Lansk\.sbt\1.0\plugins, plugins: List(<none>))) took 127.4787ms
[debug] [Loading] Done in C:\Users\Lansk\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 164.9209ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.452401ms
[debug]     Load.loadUnit(file:/C:/Users/Lansk/.sbt/1.0/plugins/, ...) took 324.073801ms
[debug]   Load.apply: load took 620.7881ms
[debug]   Load.apply: resolveProjects took 10.8917ms
[debug]   Load.apply: finalTransforms took 85.5446ms
[debug]   Load.apply: config.delegates took 11.2256ms
[debug]   Load.apply: Def.make(settings)... took 471.846299ms
[debug]   Load.apply: structureIndex took 127.3433ms
[debug]   Load.apply: mkStreams took 1.6081ms
[info] loading global plugins from C:\Users\Lansk\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2794.1922ms
[debug]           Load.loadUnit: plugins took 36.400601ms
[debug]           Load.loadUnit: defsScala took 0.0047ms
[debug] [Loading] Scanning directory D:\projects\scala\naumen.scala.course.2023.spring\homeworks\homework_2\project
[debug]             Load.loadUnit: mkEval took 7.4299ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\projects\scala\naumen.scala.course.2023.spring\homeworks\homework_2\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.2658 ms
[info] loading settings for project homework_2-build from idea.sbt ...
[debug]               Load.resolveProject(homework_2-build) took 3.2994ms
[debug]             Load.loadTransitive: finalizeProject(Project(id homework_2-build, base: D:\projects\scala\naumen.scala.course.2023.spring\homeworks\homework_2\project, plugins: List(<none>))) took 6.3089ms
[debug] [Loading] Done in D:\projects\scala\naumen.scala.course.2023.spring\homeworks\homework_2\project, returning: (homework_2-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2899.024ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.8731ms
[debug]         Load.loadUnit(file:/D:/projects/scala/naumen.scala.course.2023.spring/homeworks/homework_2/project/, ...) took 2942.5852ms
[debug]       Load.apply: load took 2944.4357ms
[debug]       Load.apply: resolveProjects took 0.1516ms
[debug]       Load.apply: finalTransforms took 16.0657ms
[debug]       Load.apply: config.delegates took 0.5252ms
[debug]       Load.apply: Def.make(settings)... took 95.544101ms
[debug]       Load.apply: structureIndex took 40.9788ms
[debug]       Load.apply: mkStreams took 0.0031ms
[info] loading project definition from D:\projects\scala\naumen.scala.course.2023.spring\homeworks\homework_2\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 6929.642ms
[debug]     Load.loadUnit: defsScala took 0.0058ms
[debug] [Loading] Scanning directory D:\projects\scala\naumen.scala.course.2023.spring\homeworks\homework_2
[debug]       Load.loadUnit: mkEval took 0.318101ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.0154 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 43.3282ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: D:\projects\scala\naumen.scala.course.2023.spring\homeworks\homework_2, plugins: List(<none>))) took 48.5827ms
[debug] [Loading] Done in D:\projects\scala\naumen.scala.course.2023.spring\homeworks\homework_2, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2144.3679ms
[debug]     Load.loadUnit: cleanEvalClasses took 23.1439ms
[debug]   Load.loadUnit(file:/D:/projects/scala/naumen.scala.course.2023.spring/homeworks/homework_2/, ...) took 9098.3789ms
[debug] Load.apply: load took 9100.4666ms
[debug] Load.apply: resolveProjects took 0.1682ms
[debug] Load.apply: finalTransforms took 50.587799ms
[debug] Load.apply: config.delegates took 0.4554ms
[debug] Load.apply: Def.make(settings)... took 108.597499ms
[debug] Load.apply: structureIndex took 29.0447ms
[debug] Load.apply: mkStreams took 0.0023ms
[info] set current project to homework_2 (in build file:/D:/projects/scala/naumen.scala.course.2023.spring/homeworks/homework_2/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 49690 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 49690, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to homework_2 (in build file:/D:/projects/scala/naumen.scala.course.2023.spring/homeworks/homework_2/)
[debug] > Exec(idea-shell, None, None)
